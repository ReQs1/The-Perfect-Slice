/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as mainAppMainLayoutImport } from './routes/(main-app)/_main-layout'
import { Route as dashboardDashboardLayoutImport } from './routes/(dashboard)/_dashboard-layout'
import { Route as mainAppMainLayoutIndexImport } from './routes/(main-app)/_main-layout/index'
import { Route as mainAppMainLayoutAboutImport } from './routes/(main-app)/_main-layout/about'
import { Route as dashboardDashboardLayoutDashboardImport } from './routes/(dashboard)/_dashboard-layout/dashboard'

// Create Virtual Routes

const mainAppImport = createFileRoute('/(main-app)')()
const dashboardImport = createFileRoute('/(dashboard)')()

// Create/Update Routes

const mainAppRoute = mainAppImport.update({
  id: '/(main-app)',
  getParentRoute: () => rootRoute,
} as any)

const dashboardRoute = dashboardImport.update({
  id: '/(dashboard)',
  getParentRoute: () => rootRoute,
} as any)

const mainAppMainLayoutRoute = mainAppMainLayoutImport.update({
  id: '/_main-layout',
  getParentRoute: () => mainAppRoute,
} as any)

const dashboardDashboardLayoutRoute = dashboardDashboardLayoutImport.update({
  id: '/_dashboard-layout',
  getParentRoute: () => dashboardRoute,
} as any)

const mainAppMainLayoutIndexRoute = mainAppMainLayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => mainAppMainLayoutRoute,
} as any)

const mainAppMainLayoutAboutRoute = mainAppMainLayoutAboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => mainAppMainLayoutRoute,
} as any)

const dashboardDashboardLayoutDashboardRoute =
  dashboardDashboardLayoutDashboardImport.update({
    id: '/dashboard',
    path: '/dashboard',
    getParentRoute: () => dashboardDashboardLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(dashboard)': {
      id: '/(dashboard)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof dashboardImport
      parentRoute: typeof rootRoute
    }
    '/(dashboard)/_dashboard-layout': {
      id: '/(dashboard)/_dashboard-layout'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof dashboardDashboardLayoutImport
      parentRoute: typeof dashboardRoute
    }
    '/(main-app)': {
      id: '/(main-app)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof mainAppImport
      parentRoute: typeof rootRoute
    }
    '/(main-app)/_main-layout': {
      id: '/(main-app)/_main-layout'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof mainAppMainLayoutImport
      parentRoute: typeof mainAppRoute
    }
    '/(dashboard)/_dashboard-layout/dashboard': {
      id: '/(dashboard)/_dashboard-layout/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof dashboardDashboardLayoutDashboardImport
      parentRoute: typeof dashboardDashboardLayoutImport
    }
    '/(main-app)/_main-layout/about': {
      id: '/(main-app)/_main-layout/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof mainAppMainLayoutAboutImport
      parentRoute: typeof mainAppMainLayoutImport
    }
    '/(main-app)/_main-layout/': {
      id: '/(main-app)/_main-layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof mainAppMainLayoutIndexImport
      parentRoute: typeof mainAppMainLayoutImport
    }
  }
}

// Create and export the route tree

interface dashboardDashboardLayoutRouteChildren {
  dashboardDashboardLayoutDashboardRoute: typeof dashboardDashboardLayoutDashboardRoute
}

const dashboardDashboardLayoutRouteChildren: dashboardDashboardLayoutRouteChildren =
  {
    dashboardDashboardLayoutDashboardRoute:
      dashboardDashboardLayoutDashboardRoute,
  }

const dashboardDashboardLayoutRouteWithChildren =
  dashboardDashboardLayoutRoute._addFileChildren(
    dashboardDashboardLayoutRouteChildren,
  )

interface dashboardRouteChildren {
  dashboardDashboardLayoutRoute: typeof dashboardDashboardLayoutRouteWithChildren
}

const dashboardRouteChildren: dashboardRouteChildren = {
  dashboardDashboardLayoutRoute: dashboardDashboardLayoutRouteWithChildren,
}

const dashboardRouteWithChildren = dashboardRoute._addFileChildren(
  dashboardRouteChildren,
)

interface mainAppMainLayoutRouteChildren {
  mainAppMainLayoutAboutRoute: typeof mainAppMainLayoutAboutRoute
  mainAppMainLayoutIndexRoute: typeof mainAppMainLayoutIndexRoute
}

const mainAppMainLayoutRouteChildren: mainAppMainLayoutRouteChildren = {
  mainAppMainLayoutAboutRoute: mainAppMainLayoutAboutRoute,
  mainAppMainLayoutIndexRoute: mainAppMainLayoutIndexRoute,
}

const mainAppMainLayoutRouteWithChildren =
  mainAppMainLayoutRoute._addFileChildren(mainAppMainLayoutRouteChildren)

interface mainAppRouteChildren {
  mainAppMainLayoutRoute: typeof mainAppMainLayoutRouteWithChildren
}

const mainAppRouteChildren: mainAppRouteChildren = {
  mainAppMainLayoutRoute: mainAppMainLayoutRouteWithChildren,
}

const mainAppRouteWithChildren =
  mainAppRoute._addFileChildren(mainAppRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof mainAppMainLayoutIndexRoute
  '/dashboard': typeof dashboardDashboardLayoutDashboardRoute
  '/about': typeof mainAppMainLayoutAboutRoute
}

export interface FileRoutesByTo {
  '/': typeof mainAppMainLayoutIndexRoute
  '/dashboard': typeof dashboardDashboardLayoutDashboardRoute
  '/about': typeof mainAppMainLayoutAboutRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/(dashboard)': typeof dashboardRouteWithChildren
  '/(dashboard)/_dashboard-layout': typeof dashboardDashboardLayoutRouteWithChildren
  '/(main-app)': typeof mainAppRouteWithChildren
  '/(main-app)/_main-layout': typeof mainAppMainLayoutRouteWithChildren
  '/(dashboard)/_dashboard-layout/dashboard': typeof dashboardDashboardLayoutDashboardRoute
  '/(main-app)/_main-layout/about': typeof mainAppMainLayoutAboutRoute
  '/(main-app)/_main-layout/': typeof mainAppMainLayoutIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/dashboard' | '/about'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/dashboard' | '/about'
  id:
    | '__root__'
    | '/(dashboard)'
    | '/(dashboard)/_dashboard-layout'
    | '/(main-app)'
    | '/(main-app)/_main-layout'
    | '/(dashboard)/_dashboard-layout/dashboard'
    | '/(main-app)/_main-layout/about'
    | '/(main-app)/_main-layout/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  dashboardRoute: typeof dashboardRouteWithChildren
  mainAppRoute: typeof mainAppRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  dashboardRoute: dashboardRouteWithChildren,
  mainAppRoute: mainAppRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/(dashboard)",
        "/(main-app)"
      ]
    },
    "/(dashboard)": {
      "filePath": "(dashboard)",
      "children": [
        "/(dashboard)/_dashboard-layout"
      ]
    },
    "/(dashboard)/_dashboard-layout": {
      "filePath": "(dashboard)/_dashboard-layout.tsx",
      "parent": "/(dashboard)",
      "children": [
        "/(dashboard)/_dashboard-layout/dashboard"
      ]
    },
    "/(main-app)": {
      "filePath": "(main-app)",
      "children": [
        "/(main-app)/_main-layout"
      ]
    },
    "/(main-app)/_main-layout": {
      "filePath": "(main-app)/_main-layout.tsx",
      "parent": "/(main-app)",
      "children": [
        "/(main-app)/_main-layout/about",
        "/(main-app)/_main-layout/"
      ]
    },
    "/(dashboard)/_dashboard-layout/dashboard": {
      "filePath": "(dashboard)/_dashboard-layout/dashboard.tsx",
      "parent": "/(dashboard)/_dashboard-layout"
    },
    "/(main-app)/_main-layout/about": {
      "filePath": "(main-app)/_main-layout/about.tsx",
      "parent": "/(main-app)/_main-layout"
    },
    "/(main-app)/_main-layout/": {
      "filePath": "(main-app)/_main-layout/index.tsx",
      "parent": "/(main-app)/_main-layout"
    }
  }
}
ROUTE_MANIFEST_END */
